{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the InvestSuite API developer documentation. Glad you're integrating with InvestSuite! Before going further let's make sure you've come to the right place. These pages provide technical documentation to assist developers in working with our APIs. We assume you've determined with our specialists the type of integration you\u2019d like to set up and are ready to dive right in. If not and instead you would like to know more about our products, get in touch with a team member; become a team member even? Reach out and we will very quickly respond. About this API \u00b6 You are looking at the API developer documentation for version: v 0.1.0 The InvestSuite API is an Open API 3.0 compliant API for developers to easily integrate with InvestSuite products and services. It is a REST API specifically designed for backend-to-backend integrations . Common use cases for the InvestSuite API are: Feed portfolio and transaction data from your system into the InvestSuite system Bulk export user and portfolio data Read and manage financial instrument data and instrument classification for thematic investing Receive portfolio optimisations Update cash positions About InvestSuite \u00b6 InvestSuite provides wealthtech solutions to banks, brokers, wealth managers and other financial institutions in Europe, the Middle East, Asia and the Americas. Our suite of products consists of Portfolio Optimizer, StoryTeller, Robo Advisor and Self Investor, all world class digital investment solutions to serve your clients better. For more information, please visit www.investsuite.com .","title":"About"},{"location":"#about-this-api","text":"You are looking at the API developer documentation for version: v 0.1.0 The InvestSuite API is an Open API 3.0 compliant API for developers to easily integrate with InvestSuite products and services. It is a REST API specifically designed for backend-to-backend integrations . Common use cases for the InvestSuite API are: Feed portfolio and transaction data from your system into the InvestSuite system Bulk export user and portfolio data Read and manage financial instrument data and instrument classification for thematic investing Receive portfolio optimisations Update cash positions","title":"About this API"},{"location":"#about-investsuite","text":"InvestSuite provides wealthtech solutions to banks, brokers, wealth managers and other financial institutions in Europe, the Middle East, Asia and the Americas. Our suite of products consists of Portfolio Optimizer, StoryTeller, Robo Advisor and Self Investor, all world class digital investment solutions to serve your clients better. For more information, please visit www.investsuite.com .","title":"About InvestSuite"},{"location":"changelog/","text":"Maintenance team \u00b6 The current and past members of the InvestSuite team. @lsorber @gidven @LukV v2 (2021-06-24) \u00b6 For InvestSuite API v0.1.0 Add Introduction page Add Get started: authentication Add Release notes (this) v1 (2021-04-08) \u00b6 For InvestSuite API v0.1.0 Scaffolding InvestSuite API documentation Add \"Embedding\" article","title":"Release notes"},{"location":"changelog/#maintenance-team","text":"The current and past members of the InvestSuite team. @lsorber @gidven @LukV","title":"Maintenance team"},{"location":"changelog/#v2-2021-06-24","text":"For InvestSuite API v0.1.0 Add Introduction page Add Get started: authentication Add Release notes (this)","title":"v2 (2021-06-24)"},{"location":"changelog/#v1-2021-04-08","text":"For InvestSuite API v0.1.0 Scaffolding InvestSuite API documentation Add \"Embedding\" article","title":"v1 (2021-04-08)"},{"location":"first_steps/","text":"Authenticate against the API to receive a JSON Web Token (JWT). Learn more about JWT at jwt.io . To authenticate you need an access key and a secret. Reach out to your InvestSuite representative and we will set you up in no time. Warning Requests should not be directly sent from your app or website, as your authentication data may be exposed in transit. All requests are required to be made via an HTTPS connection; requests made over plain HTTP will fail. When you successfully authenticate you receive an access_token and a refresh_token . Add the access_token to the HTTP headers in all subsequent requests. The access_token has a limited lifetime. The duration is added to the response body in the expires_at field, e.g expires_at: 300 . To silently prolong the session without requiring authentication data request renewal using the /refresh_token endpoint. Request POST /auth HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json { \"user\" : \"{access_key}\" , \"password\" : \"{secret}\" } Response (body) { \"access_token\" : \"eyJ0eXAiOiJKV1QiL...\" , \"token_type\" : \"Bearer\" , \"expires_in\" : \"300\" , \"refresh_token\" : \"eyJraWQiOiJEb...\" }","title":"Authentication"},{"location":"advanced_topics/collections/","text":"At this point, you have moved beyond the common scenarios and are ready to learn more about the inner workings of the InvestSuite API. Most of the topics allow you to run scenarios or to try out yourselves. Such requires authentication data. Reach out to your representative and we will provide you with credentials in no time. Find out how to authenticate in the Get started chapter. Collection response format \u00b6 Collections are paginated lists of entities. To request a collection issue a GET request against the entity root path e.g. GET /users , GET /portfolios , GET /instrument_groups . Request GET /portfolios/ ?embed=owned_by_user_id &limit=2 HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"next\" : \"http://public-api.uat.investsuite.com/portfolios/?embed=owned_by_user_id&limit=2\" , \"count\" : 204 , \"offset\" : \"10\" , \"results\" :[ { \"external_id\" : \"AE820230000000000001918\" , \"readable_by\" :[ \"U01ERYVVSZTKKYEEVX3Y6JECE83\" ], \"modifiable_by\" :[ \"U01ERYVVSZTKKYEEVX3Y6JECE83\" ], \"name\" : \"Child's education\" , \"owned_by_user_id\" : \"U01ERYVVSZTKKYEEVX3Y6JECE83\" , \"base_currency\" : \"USD\" , \"money_type\" : \"REAL_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01F5G34T4FE6T1EH798FA0M170\" , \"goal_id\" : \"L01EF46X3JH1QDFPD270BKSDTTX\" , \"horizon_id\" : \"H01EF46X564YMWFR8GTNBED16CN\" , \"risk_profile_id\" : \"K01EF46X76V5VB4E92FC1D01856\" , \"divest_amount\" : null , \"start_amount\" : 600.0 , \"recurring_deposit_amount\" : 500.0 , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : \"K01EF46X76V5VB4E92FC1D01856\" , \"tags\" :[ ], \"risk_profile_score\" : 3 , \"background_image\" : \"https://images.unsplash.com/photo-1526304640581-d334cdbbf45e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=82\" , \"background_color\" : null } }, \"brokerage_account\" :{ \"brokerage_portfolio_id\" : \"BrokerAccountKey\" , \"brokerage_user_id\" : \"BrokerAccountId\" , \"bank_account_type\" : \"IBAN\" , \"bank_account_number\" : \"AE820230000000000001918\" , \"bank_id\" : null }, \"owned_by_user_ids\" :[ ], \"portfolio\" :{ }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F7KDVY6H718JNV91840DE5V4\" , \"creation_datetime\" : \"2021-06-07T00:00:00+00:00\" , \"version\" : 2 , \"version_datetime\" : \"2021-06-07T14:26:21.231855+00:00\" , \"version_authored_by_user_id\" : \"U01ERYVVSZTKKYEEVX3Y6JECE83\" , \"deleted\" : false , \"_embedded\" :{ }, \"status\" : \"WAITING_FOR_FUNDS\" } ], \"_embedded\" :{ \"U01ERYVVSZTKKYEEVX3Y6JECE83\" :{ \"external_id\" : null , \"readable_by\" :[ \"U01F5XFY0S38KJYVHX0X3GJ4KWM\" , \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"modifiable_by\" :[ \"U01F5XFY0S38KJYVHX0X3GJ4KWM\" , \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"id\" : \"U01F5XFY0S38KJYVHX0X3GJ4KWM\" , \"creation_datetime\" : \"2021-05-17T00:00:00+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-05-17T15:43:23.427412+00:00\" , \"version_authored_by_user_id\" : \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" , \"deleted\" : false , \"_embedded\" :{ }, \"first_name\" : \"Laurent\" , \"last_name\" : \"Sorber\" , \"email\" : \"laurent.sorber@gmail.com\" , \"phone\" : null , \"brokerage_user_id\" : null , \"idp_user_id\" : \"a8c8b808-bad9-4acb-babf-aae52488e468\" , \"language\" : \"en-US\" , \"products\" :[ ] } } } Query parameters \u00b6 Collection endpoints accept alongside the embed query parameter two parameters: limit and offset. Parameter Description limit Example: limit=50 ) Allows you to pass in the number of items to be returned in the results array of the response. The default collection response size is 20 items . The maximum size is 100. offset Example offset=50 To be used in combination with the limit parameter, the offset defines the number of records that need to be skipped. embed Example: embed=field_name_1,field_name_2 Optional comma-separated list of field names for which the referenced entity is to be included in the _embedded object of the response. See Embedding . search Example: query=email+eq+'jane.doe@example.com See below. Search \u00b6 The API provides a structural search and filtering mechanism for all entities. We already opted to work with a query string parameter query=email+eq+'jane.doe@example.com instead of a POST body for more efficient client-side caching and ease of use for testing. The query syntax is a mix of both OData and Apache Lucene Query Parser Syntax . Request GET /portfolios ?query=lastmodified+in+['20200101'+to+'20240101'] HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Fundamental rules \u00b6 Every entity type can be queried by issuing a GET request e.g. GET users/?query=email+eq+'jane*' . The query string must be URL encoded. This implies that spaces would be transformed to %20 , but for improved legibility we recommend using + instead Operators \u00b6 Operator type Operator Example Number operator Exact match age eq 1 Number operator Less than age lt 18 Number operator Less than or equal age le 18 Number operator Greater than age gt 18 Number operator Greater than or equal age ge 18 String operator Exact match email eq 'jane.doe@example.com' String operator Prefix search email eq john* String operator Postfix search email eq '*gmail.com' String operator LIKE matching email eq '*gmail*' Date operator Exact match last_modified eq '2020-09-11T09:03:53.721588+00:00' Date operator Is in range for dates without time lastmodified in ['20200101' to '20210101'] Date operator Is in range for dates with time lastmodified in ['2020-09-11T09:03:53.721588' to '2020-11-11T09:03:53.721588'] Date operator Is in range for dates with timeezonr lastmodified in ['2020-09-11T09:03:53.721588+00:00' to '2020-11-11T09:03:53.721588+00:00'] Boolean operator Boolean queries archived eq true List operator IN (element of) field in ['value1', 'value2', 'value3'] Logical operator AND , OR email eq kristof and age gt 18 Hint You combine operator in all possible compositions e.g. email+eq+'*tom*'+and+firstname+in+[\u2019tom',+\u2018thomas\u2019] . Sorting \u00b6 The sorting operator always comes as the last term, except when there is a selection term which is always at the very last: orderby {attribute_name}, orderby {attribute_name} asc e.g. orderby+age is always ascending, so the same as orderby+age+asc Order descending: orderby {attribute_name} desc e.g. orderby+age+desc Multiple attributes: orderby {attribute_name} desc, {attribute_name2} asc e.g. orderby+age+desc,+firstname Attributes names can be nested e.g. orderby+manager.bank_account .","title":"Handling collection responses"},{"location":"advanced_topics/collections/#collection-response-format","text":"Collections are paginated lists of entities. To request a collection issue a GET request against the entity root path e.g. GET /users , GET /portfolios , GET /instrument_groups . Request GET /portfolios/ ?embed=owned_by_user_id &limit=2 HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"next\" : \"http://public-api.uat.investsuite.com/portfolios/?embed=owned_by_user_id&limit=2\" , \"count\" : 204 , \"offset\" : \"10\" , \"results\" :[ { \"external_id\" : \"AE820230000000000001918\" , \"readable_by\" :[ \"U01ERYVVSZTKKYEEVX3Y6JECE83\" ], \"modifiable_by\" :[ \"U01ERYVVSZTKKYEEVX3Y6JECE83\" ], \"name\" : \"Child's education\" , \"owned_by_user_id\" : \"U01ERYVVSZTKKYEEVX3Y6JECE83\" , \"base_currency\" : \"USD\" , \"money_type\" : \"REAL_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01F5G34T4FE6T1EH798FA0M170\" , \"goal_id\" : \"L01EF46X3JH1QDFPD270BKSDTTX\" , \"horizon_id\" : \"H01EF46X564YMWFR8GTNBED16CN\" , \"risk_profile_id\" : \"K01EF46X76V5VB4E92FC1D01856\" , \"divest_amount\" : null , \"start_amount\" : 600.0 , \"recurring_deposit_amount\" : 500.0 , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : \"K01EF46X76V5VB4E92FC1D01856\" , \"tags\" :[ ], \"risk_profile_score\" : 3 , \"background_image\" : \"https://images.unsplash.com/photo-1526304640581-d334cdbbf45e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1200&q=82\" , \"background_color\" : null } }, \"brokerage_account\" :{ \"brokerage_portfolio_id\" : \"BrokerAccountKey\" , \"brokerage_user_id\" : \"BrokerAccountId\" , \"bank_account_type\" : \"IBAN\" , \"bank_account_number\" : \"AE820230000000000001918\" , \"bank_id\" : null }, \"owned_by_user_ids\" :[ ], \"portfolio\" :{ }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F7KDVY6H718JNV91840DE5V4\" , \"creation_datetime\" : \"2021-06-07T00:00:00+00:00\" , \"version\" : 2 , \"version_datetime\" : \"2021-06-07T14:26:21.231855+00:00\" , \"version_authored_by_user_id\" : \"U01ERYVVSZTKKYEEVX3Y6JECE83\" , \"deleted\" : false , \"_embedded\" :{ }, \"status\" : \"WAITING_FOR_FUNDS\" } ], \"_embedded\" :{ \"U01ERYVVSZTKKYEEVX3Y6JECE83\" :{ \"external_id\" : null , \"readable_by\" :[ \"U01F5XFY0S38KJYVHX0X3GJ4KWM\" , \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"modifiable_by\" :[ \"U01F5XFY0S38KJYVHX0X3GJ4KWM\" , \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"id\" : \"U01F5XFY0S38KJYVHX0X3GJ4KWM\" , \"creation_datetime\" : \"2021-05-17T00:00:00+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-05-17T15:43:23.427412+00:00\" , \"version_authored_by_user_id\" : \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" , \"deleted\" : false , \"_embedded\" :{ }, \"first_name\" : \"Laurent\" , \"last_name\" : \"Sorber\" , \"email\" : \"laurent.sorber@gmail.com\" , \"phone\" : null , \"brokerage_user_id\" : null , \"idp_user_id\" : \"a8c8b808-bad9-4acb-babf-aae52488e468\" , \"language\" : \"en-US\" , \"products\" :[ ] } } }","title":"Collection response format"},{"location":"advanced_topics/collections/#query-parameters","text":"Collection endpoints accept alongside the embed query parameter two parameters: limit and offset. Parameter Description limit Example: limit=50 ) Allows you to pass in the number of items to be returned in the results array of the response. The default collection response size is 20 items . The maximum size is 100. offset Example offset=50 To be used in combination with the limit parameter, the offset defines the number of records that need to be skipped. embed Example: embed=field_name_1,field_name_2 Optional comma-separated list of field names for which the referenced entity is to be included in the _embedded object of the response. See Embedding . search Example: query=email+eq+'jane.doe@example.com See below.","title":"Query parameters"},{"location":"advanced_topics/collections/#search","text":"The API provides a structural search and filtering mechanism for all entities. We already opted to work with a query string parameter query=email+eq+'jane.doe@example.com instead of a POST body for more efficient client-side caching and ease of use for testing. The query syntax is a mix of both OData and Apache Lucene Query Parser Syntax . Request GET /portfolios ?query=lastmodified+in+['20200101'+to+'20240101'] HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ...","title":"Search"},{"location":"advanced_topics/collections/#fundamental-rules","text":"Every entity type can be queried by issuing a GET request e.g. GET users/?query=email+eq+'jane*' . The query string must be URL encoded. This implies that spaces would be transformed to %20 , but for improved legibility we recommend using + instead","title":"Fundamental rules"},{"location":"advanced_topics/collections/#operators","text":"Operator type Operator Example Number operator Exact match age eq 1 Number operator Less than age lt 18 Number operator Less than or equal age le 18 Number operator Greater than age gt 18 Number operator Greater than or equal age ge 18 String operator Exact match email eq 'jane.doe@example.com' String operator Prefix search email eq john* String operator Postfix search email eq '*gmail.com' String operator LIKE matching email eq '*gmail*' Date operator Exact match last_modified eq '2020-09-11T09:03:53.721588+00:00' Date operator Is in range for dates without time lastmodified in ['20200101' to '20210101'] Date operator Is in range for dates with time lastmodified in ['2020-09-11T09:03:53.721588' to '2020-11-11T09:03:53.721588'] Date operator Is in range for dates with timeezonr lastmodified in ['2020-09-11T09:03:53.721588+00:00' to '2020-11-11T09:03:53.721588+00:00'] Boolean operator Boolean queries archived eq true List operator IN (element of) field in ['value1', 'value2', 'value3'] Logical operator AND , OR email eq kristof and age gt 18 Hint You combine operator in all possible compositions e.g. email+eq+'*tom*'+and+firstname+in+[\u2019tom',+\u2018thomas\u2019] .","title":"Operators"},{"location":"advanced_topics/collections/#sorting","text":"The sorting operator always comes as the last term, except when there is a selection term which is always at the very last: orderby {attribute_name}, orderby {attribute_name} asc e.g. orderby+age is always ascending, so the same as orderby+age+asc Order descending: orderby {attribute_name} desc e.g. orderby+age+desc Multiple attributes: orderby {attribute_name} desc, {attribute_name2} asc e.g. orderby+age+desc,+firstname Attributes names can be nested e.g. orderby+manager.bank_account .","title":"Sorting"},{"location":"advanced_topics/embedding/","text":"Introduction \u00b6 The InvestSuite API supports optional embedding of entities by EntityID , a feature which is modeled after 1 Zalando's RESTful API Performance Guideline #158 . Embedding enables API clients to merge referenced entities directly into a single response, which reduces the amount of (sequential) round trips required to fetch data from InvestSuite's backend. This feature is particularly convenient in use cases where data from multiple entities is joined together, a common operation when preparing data for reporting purposes or in specific front end views. In order to embed certain field(s), the ?embed= query string parameter needs to be provided in GET requests. This parameter can be set to one or more field names that are available in the response object (and are references to other entities). The response will be extended with a populated _embedded key at the root level, which contains a full rendition of the referenced entities. This provides a useful level of flexibility in API responses, allowing clients to directly retrieve related data with a single request. Hint Embedding works for any response field value that is an (array of) EntityID s, which can be recognized by the globally-unique identifier that follows below regex (such as a UserID like U01234567890123456789012345 ). This regex translates to a single alphabet letter identifying the type of entity, followed by a 26-character ULID based on the Crockford base32 character set. ^[A-Z][0-9A-HJKMNP-TV-Z]{26}$ Single embedded entity \u00b6 Suppose an API client requires both data for a specific portfolio ( P01234567890123456789012345 ) and data for the user that owns this particular portfolio. Without embedding, this would be a sequential two-step process, where the client first retrieves the portfolio in question: Request GET /portfolios/P01234567890123456789012345 HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, ... \"id\" : \"P01234567890123456789012345\" , ... } And then uses the owned_by_user_id field value ( U01234567890123456789012345 ) in the response to query data for the owner, who turns out the be John Doe : Request GET /users/U01234567890123456789012345 HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" , ], \"external_id\" : \"my_external_user_id\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john_doe@example.com\" , ... \"id\" : \"U01234567890123456789012345\" , ... } Note In this example, unless the client already knows the UserID of the owner for this portfolio, the requests will by definition always be sequential because the required path parameter for the requests to /users/ is not known until the first response is received. With embedding, both requests can be rolled into a single operation , which adds the referenced entities to the _embedded key at the root of the response (see below). Note that this object contains a dictionary where the keys are the referenced EntityID s and the value is the data for that entity (in this case a User object). The client can now directly parse the information for the UserID appearing in the owned_by_used_id field from the _embedded object without having to perform a subsequent request to /users/ . Request GET /portfolios/P01234567890123456789012345?embed=owned_by_user_id HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, ... \"id\" : \"P01234567890123456789012345\" , ... \"_embedded\" : { \"U01234567890123456789012345\" : { \"readable_by\" : [ \"U01234567890123456789012345\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" , ], \"external_id\" : \"my_external_user_id\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john_doe@example.com\" , ... \"id\" : \"U01234567890123456789012345\" , ... } } } Info The amount of 'work' required to retrieve data can be significantly reduced on both sides if embedding is used cleverly. In the above example, the number of requests required from the client is cut in half, which speeds up the interaction considerably. At the same time, API resources are used efficiently, as per-request overhead can be avoided. Multiple embedded entities \u00b6 For the next example, assume that the client requires a portfolio, the owner of the portfolio, and the user that updated the portfolio most recently. This can be achieved by adding multiple response fields to the embed= param, separated by commas: Request GET /portfolios/P01234567890123456789012345?embed=owned_by_user_id,version_authored_by_user_id HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, ... \"id\" : \"P01234567890123456789012345\" , ... \"version_authored_by_user_id\" : \"U01234567890123456789012345\" , \"_embedded\" : { \"U01234567890123456789012345\" : { \"readable_by\" : [ \"U01234567890123456789012345\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" , ], \"external_id\" : \"my_external_user_id\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john_doe@example.com\" , ... \"id\" : \"U01234567890123456789012345\" , ... } } } Note In this case, the referenced entity comes up twice: both as the owner of the portfolio and as the author of the most recent version. As a result, the _embedded object only contains a single object (no repeated keys). This helps to further reduce repeated queries and unnecessary overhead. Embedding with collections \u00b6 Similar to single-entity responses, collections support embedding as well. If embedding is requested, the _embedded object will contain referenced entities for all objects returned in the collection . For instance, a client can request a list of 10 portfolios and directly embed the owners of all these portfolios. This is particularly useful when creating front-end views or collecting data for reporting purposes where multiple entities need to be joined together in bulk. This process also reduces overhead on the server side: 1 query to retrieve portfolios, and 1 query to filter for the list of users is a lot more efficient than requesting these entities sequentially from the client side. Request GET /portfolios/?embed=owned_by_user_id&limit=10 HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"next\" : \"http://api.investsuite.com/portfolios/?embed=owned_by_user_id&limit=10&offset=P01234567890123456789012345\" , \"offset\" : \"P01234567890123456789012345\" , \"results\" : [ { \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"id\" : \"P01234567890123456789012345\" , ... }, { \"owned_by_user_id\" : \"U98765432109876543210987654\" , \"id\" : \"P98765432109876543210987654\" , ... }, ... ], \"_embedded\" : { \"U01234567890123456789012345\" : { \"first_name\" : \"John\" , ... }, \"U98765432109876543210987654\" : { \"first_name\" : \"Jane\" , ... }, ... } } Embedding a reference to a list of entities \u00b6 Finally, it is also possible to embed not just a single referenced entity, but an array pointing at multiple entity IDs. The readable_by and modifiable_by arrays in the standard entity response are a good example, as these can contain references to multiple (different) entities, such as users and user groups. Suppose the requirement is to retrieve all users that have read access to a certain portfolio, which again can be achieved with a single request. In the below response, user Jane has view-only permissions to the portfolio of John , who is the owner and has both read and write permissions: Request GET /portfolios/P01234567890123456789012345?embed=readable_by HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" , \"U98765432109876543210987654\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, \"id\" : \"P01234567890123456789012345\" , ... \"_embedded\" : { \"U01234567890123456789012345\" : { \"first_name\" : \"John\" , ... }, \"U98765432109876543210987654\" : { \"first_name\" : \"Jane\" , ... } } } FAQ \u00b6 What common errors can be encountered when working with embedding? The API will throw helpful error messages when the requested embedding could not be completed successfully, indicating the location of the error ( loc , pointing at query , parameter: embed ), and a human-readable error message with a reference to the received value. { \"title\" : \"Bad request\" , \"detail\" : [ { \"loc\" : [ \"query\" , \"embed\" ], \"msg\" : \"field 'not_an_existing_field' not found in this entity\" , \"type\" : \"value_error.exception\" } ], \"status\" : 400 } In case a field is requested that that cannot be embedded (i.e. a field that is not a reference to another entity), the error message will be: \"msg\" : \"field 'first_name' cannot be embedded\" What happens if the requesting user does not have access to the embedded entity? Read and write permissions are controlled by the readable_by and modifiable_by arrays on each entity respectively. If the requesting user does not have the right permissions (in this case, its ID is not in the readable_by list on the referenced entity), a standard 403 Forbidden . Note that the error references the embedded entity , which is another user in the below example. This could be slightly confusing when the original request was for a different entity such as a portfolio, but the error indicates lack of read access to a user. { \"title\" : \"Access forbidden\" , \"detail\" : \"User U01234567890123456789012345 does not have READ access on U98765432109876543210987654 (version=latest)\" , \"status\" : 403 } What happens if a reference to a deleted entity is embedded? Similar to the permission error above, when a reference to an entity is requested for embedding, but that entity is no longer available, a standard 404 Not Found response is returned. Again, bear in mind that this error is specific to the embedded entity . It might for instance be possible to retrieve a portfolio instance, but if an embedded reference to the owner of that portfolio is a deleted object, the error will indicate this: { \"title\" : \"Resource not found\" , \"detail\" : \"Entity 'U01234567890123456789012345' (version=0) not found for tenant 'example.com'\" , \"status\" : 404 , } The Zalando guidelines include an example of embedding a sub-resource into the response. The InvestSuite API supports embedding of any referenced entity (which does not necessarily have to be a sub-resource of the requested entity). In addition, it is also possible to embed a list of referenced entities instead of a just single instance. \u21a9","title":"Embedding"},{"location":"advanced_topics/embedding/#introduction","text":"The InvestSuite API supports optional embedding of entities by EntityID , a feature which is modeled after 1 Zalando's RESTful API Performance Guideline #158 . Embedding enables API clients to merge referenced entities directly into a single response, which reduces the amount of (sequential) round trips required to fetch data from InvestSuite's backend. This feature is particularly convenient in use cases where data from multiple entities is joined together, a common operation when preparing data for reporting purposes or in specific front end views. In order to embed certain field(s), the ?embed= query string parameter needs to be provided in GET requests. This parameter can be set to one or more field names that are available in the response object (and are references to other entities). The response will be extended with a populated _embedded key at the root level, which contains a full rendition of the referenced entities. This provides a useful level of flexibility in API responses, allowing clients to directly retrieve related data with a single request. Hint Embedding works for any response field value that is an (array of) EntityID s, which can be recognized by the globally-unique identifier that follows below regex (such as a UserID like U01234567890123456789012345 ). This regex translates to a single alphabet letter identifying the type of entity, followed by a 26-character ULID based on the Crockford base32 character set. ^[A-Z][0-9A-HJKMNP-TV-Z]{26}$","title":"Introduction"},{"location":"advanced_topics/embedding/#single-embedded-entity","text":"Suppose an API client requires both data for a specific portfolio ( P01234567890123456789012345 ) and data for the user that owns this particular portfolio. Without embedding, this would be a sequential two-step process, where the client first retrieves the portfolio in question: Request GET /portfolios/P01234567890123456789012345 HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, ... \"id\" : \"P01234567890123456789012345\" , ... } And then uses the owned_by_user_id field value ( U01234567890123456789012345 ) in the response to query data for the owner, who turns out the be John Doe : Request GET /users/U01234567890123456789012345 HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" , ], \"external_id\" : \"my_external_user_id\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john_doe@example.com\" , ... \"id\" : \"U01234567890123456789012345\" , ... } Note In this example, unless the client already knows the UserID of the owner for this portfolio, the requests will by definition always be sequential because the required path parameter for the requests to /users/ is not known until the first response is received. With embedding, both requests can be rolled into a single operation , which adds the referenced entities to the _embedded key at the root of the response (see below). Note that this object contains a dictionary where the keys are the referenced EntityID s and the value is the data for that entity (in this case a User object). The client can now directly parse the information for the UserID appearing in the owned_by_used_id field from the _embedded object without having to perform a subsequent request to /users/ . Request GET /portfolios/P01234567890123456789012345?embed=owned_by_user_id HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, ... \"id\" : \"P01234567890123456789012345\" , ... \"_embedded\" : { \"U01234567890123456789012345\" : { \"readable_by\" : [ \"U01234567890123456789012345\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" , ], \"external_id\" : \"my_external_user_id\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john_doe@example.com\" , ... \"id\" : \"U01234567890123456789012345\" , ... } } } Info The amount of 'work' required to retrieve data can be significantly reduced on both sides if embedding is used cleverly. In the above example, the number of requests required from the client is cut in half, which speeds up the interaction considerably. At the same time, API resources are used efficiently, as per-request overhead can be avoided.","title":"Single embedded entity"},{"location":"advanced_topics/embedding/#multiple-embedded-entities","text":"For the next example, assume that the client requires a portfolio, the owner of the portfolio, and the user that updated the portfolio most recently. This can be achieved by adding multiple response fields to the embed= param, separated by commas: Request GET /portfolios/P01234567890123456789012345?embed=owned_by_user_id,version_authored_by_user_id HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, ... \"id\" : \"P01234567890123456789012345\" , ... \"version_authored_by_user_id\" : \"U01234567890123456789012345\" , \"_embedded\" : { \"U01234567890123456789012345\" : { \"readable_by\" : [ \"U01234567890123456789012345\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" , ], \"external_id\" : \"my_external_user_id\" , \"first_name\" : \"John\" , \"last_name\" : \"Doe\" , \"email\" : \"john_doe@example.com\" , ... \"id\" : \"U01234567890123456789012345\" , ... } } } Note In this case, the referenced entity comes up twice: both as the owner of the portfolio and as the author of the most recent version. As a result, the _embedded object only contains a single object (no repeated keys). This helps to further reduce repeated queries and unnecessary overhead.","title":"Multiple embedded entities"},{"location":"advanced_topics/embedding/#embedding-with-collections","text":"Similar to single-entity responses, collections support embedding as well. If embedding is requested, the _embedded object will contain referenced entities for all objects returned in the collection . For instance, a client can request a list of 10 portfolios and directly embed the owners of all these portfolios. This is particularly useful when creating front-end views or collecting data for reporting purposes where multiple entities need to be joined together in bulk. This process also reduces overhead on the server side: 1 query to retrieve portfolios, and 1 query to filter for the list of users is a lot more efficient than requesting these entities sequentially from the client side. Request GET /portfolios/?embed=owned_by_user_id&limit=10 HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"next\" : \"http://api.investsuite.com/portfolios/?embed=owned_by_user_id&limit=10&offset=P01234567890123456789012345\" , \"offset\" : \"P01234567890123456789012345\" , \"results\" : [ { \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"id\" : \"P01234567890123456789012345\" , ... }, { \"owned_by_user_id\" : \"U98765432109876543210987654\" , \"id\" : \"P98765432109876543210987654\" , ... }, ... ], \"_embedded\" : { \"U01234567890123456789012345\" : { \"first_name\" : \"John\" , ... }, \"U98765432109876543210987654\" : { \"first_name\" : \"Jane\" , ... }, ... } }","title":"Embedding with collections"},{"location":"advanced_topics/embedding/#embedding-a-reference-to-a-list-of-entities","text":"Finally, it is also possible to embed not just a single referenced entity, but an array pointing at multiple entity IDs. The readable_by and modifiable_by arrays in the standard entity response are a good example, as these can contain references to multiple (different) entities, such as users and user groups. Suppose the requirement is to retrieve all users that have read access to a certain portfolio, which again can be achieved with a single request. In the below response, user Jane has view-only permissions to the portfolio of John , who is the owner and has both read and write permissions: Request GET /portfolios/P01234567890123456789012345?embed=readable_by HTTP / 1.1 Host : api.investsuite.com Accept : application/json Accept-Encoding : gzip, deflate Connection : Keep-Alive Response (body) { \"readable_by\" : [ \"U01234567890123456789012345\" , \"U98765432109876543210987654\" , ], \"modifiable_by\" : [ \"U01234567890123456789012345\" ], \"external_id\" : \"my_external_portfolio_id\" , \"name\" : \"Example Portfolio\" , \"owned_by_user_id\" : \"U01234567890123456789012345\" , \"portfolio\" : { ... }, \"id\" : \"P01234567890123456789012345\" , ... \"_embedded\" : { \"U01234567890123456789012345\" : { \"first_name\" : \"John\" , ... }, \"U98765432109876543210987654\" : { \"first_name\" : \"Jane\" , ... } } }","title":"Embedding a reference to a list of entities"},{"location":"advanced_topics/embedding/#faq","text":"What common errors can be encountered when working with embedding? The API will throw helpful error messages when the requested embedding could not be completed successfully, indicating the location of the error ( loc , pointing at query , parameter: embed ), and a human-readable error message with a reference to the received value. { \"title\" : \"Bad request\" , \"detail\" : [ { \"loc\" : [ \"query\" , \"embed\" ], \"msg\" : \"field 'not_an_existing_field' not found in this entity\" , \"type\" : \"value_error.exception\" } ], \"status\" : 400 } In case a field is requested that that cannot be embedded (i.e. a field that is not a reference to another entity), the error message will be: \"msg\" : \"field 'first_name' cannot be embedded\" What happens if the requesting user does not have access to the embedded entity? Read and write permissions are controlled by the readable_by and modifiable_by arrays on each entity respectively. If the requesting user does not have the right permissions (in this case, its ID is not in the readable_by list on the referenced entity), a standard 403 Forbidden . Note that the error references the embedded entity , which is another user in the below example. This could be slightly confusing when the original request was for a different entity such as a portfolio, but the error indicates lack of read access to a user. { \"title\" : \"Access forbidden\" , \"detail\" : \"User U01234567890123456789012345 does not have READ access on U98765432109876543210987654 (version=latest)\" , \"status\" : 403 } What happens if a reference to a deleted entity is embedded? Similar to the permission error above, when a reference to an entity is requested for embedding, but that entity is no longer available, a standard 404 Not Found response is returned. Again, bear in mind that this error is specific to the embedded entity . It might for instance be possible to retrieve a portfolio instance, but if an embedded reference to the owner of that portfolio is a deleted object, the error will indicate this: { \"title\" : \"Resource not found\" , \"detail\" : \"Entity 'U01234567890123456789012345' (version=0) not found for tenant 'example.com'\" , \"status\" : 404 , } The Zalando guidelines include an example of embedding a sub-resource into the response. The InvestSuite API supports embedding of any referenced entity (which does not necessarily have to be a sub-resource of the requested entity). In addition, it is also possible to embed a list of referenced entities instead of a just single instance. \u21a9","title":"FAQ"},{"location":"advanced_topics/errors/","text":"Errors happen. If that is the case the API returns a 4** error if it assumes that the error is caused by your application, or a 5** in case of a server error. If there is no error anticipated the API returns a 2** code. Error codes \u00b6 Code Status Description 200 OK The request was successfully completed. 201 Created A new resource was successfully created. 400 Bad Request The request was invalid. 401 Unauthorized The request did not include an authentication token or the authentication token was expired. 403 Forbidden The client did not have permission to access the requested resource. 404 Not Found The requested resource was not found. 422 Validation error The request was understood but a validation error prevented the server to process the request. If this is the case the API adds context to the response body (see example below). 500 Internal Server Error The request was not completed due to an internal error on the server side. Example of a 422 response body \u00b6 When a validation error occurs the reason and the location are documented in the response body. { \"title\" : \"Bad request\" , \"detail\" :[ { \"loc\u201d: [\u201cbody\" , \"entity\" , \"base_currency\" ], \"msg\" : \"base_currency may not be updated because it is marked with allow_mutation=False\" } ] }","title":"A closer look at API errors"},{"location":"advanced_topics/errors/#error-codes","text":"Code Status Description 200 OK The request was successfully completed. 201 Created A new resource was successfully created. 400 Bad Request The request was invalid. 401 Unauthorized The request did not include an authentication token or the authentication token was expired. 403 Forbidden The client did not have permission to access the requested resource. 404 Not Found The requested resource was not found. 422 Validation error The request was understood but a validation error prevented the server to process the request. If this is the case the API adds context to the response body (see example below). 500 Internal Server Error The request was not completed due to an internal error on the server side.","title":"Error codes"},{"location":"advanced_topics/errors/#example-of-a-422-response-body","text":"When a validation error occurs the reason and the location are documented in the response body. { \"title\" : \"Bad request\" , \"detail\" :[ { \"loc\u201d: [\u201cbody\" , \"entity\" , \"base_currency\" ], \"msg\" : \"base_currency may not be updated because it is marked with allow_mutation=False\" } ] }","title":"Example of a 422 response body"},{"location":"common_scenarios/portfolios/","text":"A portfolio holds one or more investment products for instance stocks, ETFs or cryptocurrency. The composition of a portfolio depends on the investor\u2019s goals, budget, risk appetite and the holding period. An investor can without advise decide what instruments a portfolio is made of. In this case it is a \u201cself managed\u201d portfolio. A portfolio can equally be composed by an algorithm such as the InvestSuite\u2019s iVar algorithm. In that case the portfolio is managed by a Robo Advisor. Once you have created a portfolio you can create a portfolio and assign the portfolio as owner. Create a portfolio \u00b6 Request POST /portfolios/ HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... { \"base_currency\" : \"USD\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_settings\" :{ \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"start_amount\" : 10000 , }, \"manager_version\" : 1 }, \"external_id\" : \"your-bank-portfolio-1\" , \"money_type\" : \"PAPER_MONEY\" , \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"portfolio\" :{ \"$USD\" : 10000 }, } Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" } Get a portfolio \u00b6 Add the InvestSuite ID to the path to retrieve a portfolio object. Request GET /portfolios/P01F8ZSNV0J45R9DFZ3D7D8C26F HTTP / 1.1 Host : public-api.uat.investsuite.com Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" } Search \u00b6 You can query each entity through a general endpoint e.g. GET portfolios/?query=\u2026 . Learn more in the Handling collection responses section. Request GET /portfolios ?query=external_id+eq+'your-bank-portfolio-1' HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" } Update a portfolio object \u00b6 Given the right permissions you can update any object by issuing a PATCH request. Request PATCH /portfolios/P01F8ZSNV0J45R9DFZ3D7D8C26F HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... \"config\" : { \"manager_settings\" : { \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" } } Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" } Delete a portfolio \u00b6 Given the right permissions you can delete any object by issuing a DELETE request. Request DELETE /portfolios/P01F8ZSNV0J45R9DFZ3D7D8C26F HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"msg\" : \"Resource 'P01F8ZSNV0J45R9DFZ3D7D8C26F' has been deleted\" }","title":"Create and manage portfolios"},{"location":"common_scenarios/portfolios/#create-a-portfolio","text":"Request POST /portfolios/ HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... { \"base_currency\" : \"USD\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_settings\" :{ \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"start_amount\" : 10000 , }, \"manager_version\" : 1 }, \"external_id\" : \"your-bank-portfolio-1\" , \"money_type\" : \"PAPER_MONEY\" , \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"portfolio\" :{ \"$USD\" : 10000 }, } Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" }","title":"Create a portfolio"},{"location":"common_scenarios/portfolios/#get-a-portfolio","text":"Add the InvestSuite ID to the path to retrieve a portfolio object. Request GET /portfolios/P01F8ZSNV0J45R9DFZ3D7D8C26F HTTP / 1.1 Host : public-api.uat.investsuite.com Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" }","title":"Get a portfolio"},{"location":"common_scenarios/portfolios/#search","text":"You can query each entity through a general endpoint e.g. GET portfolios/?query=\u2026 . Learn more in the Handling collection responses section. Request GET /portfolios ?query=external_id+eq+'your-bank-portfolio-1' HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" }","title":"Search"},{"location":"common_scenarios/portfolios/#update-a-portfolio-object","text":"Given the right permissions you can update any object by issuing a PATCH request. Request PATCH /portfolios/P01F8ZSNV0J45R9DFZ3D7D8C26F HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... \"config\" : { \"manager_settings\" : { \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" } } Response (body) { \"external_id\" : \"your-bank-portfolio-1\" , \"readable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"modifiable_by\" :[ \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" ], \"name\" : \"General investing\" , \"owned_by_portfolio_id\" : \"U01F5WYKRRXZHXT9S6FF1JZNJVZ\" , \"base_currency\" : \"USD\" , \"money_type\" : \"PAPER_MONEY\" , \"config\" :{ \"manager\" : \"ROBO_ADVISOR_DISCRETIONARY\" , \"manager_version\" : 1 , \"manager_settings\" :{ \"policy_id\" : \"Y01EF46X9XB437JS4678X0K529C\" , \"goal_id\" : \"L01EF46X4872VVN0QRW4XF2ZP6W\" , \"horizon_id\" : \"H01EQ3429CY6Y2NW0ZF8A8Y2FYJ\" , \"risk_profile_id\" : null , \"divest_amount\" : null , \"start_amount\" : 10000 , \"recurring_deposit_amount\" : null , \"end_datetime\" : null , \"active\" : true , \"proposed_risk_profile_id\" : null , \"tags\" :[ ], \"risk_profile_score\" : null , \"background_image\" : null , \"background_color\" : null } }, \"brokerage_account\" : null , \"portfolio\" :{ \"$USD\" : 10000 }, \"snapshot_datetime\" : null , \"archived\" : false , \"funded_since\" : null , \"id\" : \"P01F8ZSNV0J45R9DFZ3D7D8C26F\" , \"creation_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-06-24T19:59:15.474241+00:00\" , \"version_authored_by_portfolio_id\" : \"U01EJQSYGYQJJ5GNFM4ZXW59Q0X\" , \"deleted\" : false , \"status\" : \"WAITING_FOR_FUNDS\" }","title":"Update a portfolio object"},{"location":"common_scenarios/portfolios/#delete-a-portfolio","text":"Given the right permissions you can delete any object by issuing a DELETE request. Request DELETE /portfolios/P01F8ZSNV0J45R9DFZ3D7D8C26F HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"msg\" : \"Resource 'P01F8ZSNV0J45R9DFZ3D7D8C26F' has been deleted\" }","title":"Delete a portfolio"},{"location":"common_scenarios/thematic_search/","text":"Thematic search \u00b6 The InvestSuite quant team composes and actively manages a list of themes (instrument groups) such as Healthcare, Clean & Green economy, Social trends each holding an applicable list of financial instruments. The aim of thematic search is to offer in the context of self execution, complementary to other search mechanisms, to your clients a means to filter the stock universe to their personal preference and view. To retrieve themes and selected instruments within them perform a GET request against the instrument_groups endpoint. Model \u00b6 Thematic search is based on a simple CRUD model. The entity InstrumentGroups aggregates 0..* Instrument objects. An InstrumentGroup is the category e.g. HealthCare and holds properties to describe the category: name, image, description. The Instrument object is a financial instrument, identified by an ISIN (external_id), and also holds properties to describe the instrument. Request GET /instrument_groups ?[limit=100] &[embed=instrument_ids] HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"next\" : null , \"offset\" : null , \"results\" : [ { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"modifiable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"id\" : \"J01F3MQ2DPYXPS7JTHGXX4D09D3\" , \"creation_datetime\" : \"2021-04-19T00:00:00+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-04-19T09:23:34.238210+00:00\" , \"version_authored_by_user_id\" : \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" , \"deleted\" : false , \"_embedded\" : {}, \"name\" : { \"en-US\" : \"Cloud Computing\" }, \"category\" : { \"en-US\" : \"Digital Disruption\" }, \"image_uri\" : \"urn:ietf:rfc:2648\" , \"description\" : { \"en-US\" : \"Cloud Computing is the on-demand availability of computer system resources, especially data storage (cloud storage) and computing power.\" }, \"instrument_ids\" : [ \"I01F3MPZ53PNXBQVTKZNKJ88RA3\" ] } ], \"_embedded\" : { \"I01F3MPZ53PNXBQVTKZNKJ88RA3\" : { \"external_id\" : \"US0378331005\" , \"readable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"modifiable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"name\" : \"Appel BV. Ordinary Shares\" , \"display_name\" : \"Appel BV\" , \"tags\" : [], \"type\" : \"STOCK\" , \"image_uri\" : null , \"id\" : \"I01F3MPZ53PNXBQVTKZNKJ88RA3\" , \"creation_datetime\" : \"2021-04-19T00:00:00+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-04-19T09:21:47.127958+00:00\" , \"version_authored_by_user_id\" : \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" , \"deleted\" : false , \"_embedded\" : {} } } } Embedding \u00b6 You can add details about the Instrument objects to the InstrumentGroup objects collection by providing the ?embed=query query string parameter. This parameter can be set to one or more field names that are available in the response object (and are references to other entities). The response will be extended with a populated _embedded key at the root level, which contains a full rendition of the referenced entities. Collections \u00b6 Collections are paginated lists of entities. To request a collection issue a GET request against the entity root path e.g. GET /users , GET /portfolios , GET /instrument_groups . Collection endpoints accept alongside the embed query parameter take two parameters: limit and offset. Limit ( limit=50 ) allows you to pass in the number of items to be returned in the results array of the response. The default collection response size is 20 items . The maximum size is 100.","title":"Retrieve instrument groups"},{"location":"common_scenarios/thematic_search/#thematic-search","text":"The InvestSuite quant team composes and actively manages a list of themes (instrument groups) such as Healthcare, Clean & Green economy, Social trends each holding an applicable list of financial instruments. The aim of thematic search is to offer in the context of self execution, complementary to other search mechanisms, to your clients a means to filter the stock universe to their personal preference and view. To retrieve themes and selected instruments within them perform a GET request against the instrument_groups endpoint.","title":"Thematic search"},{"location":"common_scenarios/thematic_search/#model","text":"Thematic search is based on a simple CRUD model. The entity InstrumentGroups aggregates 0..* Instrument objects. An InstrumentGroup is the category e.g. HealthCare and holds properties to describe the category: name, image, description. The Instrument object is a financial instrument, identified by an ISIN (external_id), and also holds properties to describe the instrument. Request GET /instrument_groups ?[limit=100] &[embed=instrument_ids] HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"next\" : null , \"offset\" : null , \"results\" : [ { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"modifiable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"id\" : \"J01F3MQ2DPYXPS7JTHGXX4D09D3\" , \"creation_datetime\" : \"2021-04-19T00:00:00+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-04-19T09:23:34.238210+00:00\" , \"version_authored_by_user_id\" : \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" , \"deleted\" : false , \"_embedded\" : {}, \"name\" : { \"en-US\" : \"Cloud Computing\" }, \"category\" : { \"en-US\" : \"Digital Disruption\" }, \"image_uri\" : \"urn:ietf:rfc:2648\" , \"description\" : { \"en-US\" : \"Cloud Computing is the on-demand availability of computer system resources, especially data storage (cloud storage) and computing power.\" }, \"instrument_ids\" : [ \"I01F3MPZ53PNXBQVTKZNKJ88RA3\" ] } ], \"_embedded\" : { \"I01F3MPZ53PNXBQVTKZNKJ88RA3\" : { \"external_id\" : \"US0378331005\" , \"readable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"modifiable_by\" : [ \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" ], \"name\" : \"Appel BV. Ordinary Shares\" , \"display_name\" : \"Appel BV\" , \"tags\" : [], \"type\" : \"STOCK\" , \"image_uri\" : null , \"id\" : \"I01F3MPZ53PNXBQVTKZNKJ88RA3\" , \"creation_datetime\" : \"2021-04-19T00:00:00+00:00\" , \"version\" : 1 , \"version_datetime\" : \"2021-04-19T09:21:47.127958+00:00\" , \"version_authored_by_user_id\" : \"UXXXXXXXXXXXXXXXXXXXXXXXXXX\" , \"deleted\" : false , \"_embedded\" : {} } } }","title":"Model"},{"location":"common_scenarios/thematic_search/#embedding","text":"You can add details about the Instrument objects to the InstrumentGroup objects collection by providing the ?embed=query query string parameter. This parameter can be set to one or more field names that are available in the response object (and are references to other entities). The response will be extended with a populated _embedded key at the root level, which contains a full rendition of the referenced entities.","title":"Embedding"},{"location":"common_scenarios/thematic_search/#collections","text":"Collections are paginated lists of entities. To request a collection issue a GET request against the entity root path e.g. GET /users , GET /portfolios , GET /instrument_groups . Collection endpoints accept alongside the embed query parameter take two parameters: limit and offset. Limit ( limit=50 ) allows you to pass in the number of items to be returned in the results array of the response. The default collection response size is 20 items . The maximum size is 100.","title":"Collections"},{"location":"common_scenarios/users/","text":"Account opening \u00b6 To offer access to InvestSuite products you open an account on behalf of your clients. Opening an account requires passing the data you request via an app or web site, or sending the data stored in your banking system or CRM. The data that are required are two-fold. Firstly an identifier to reference the user, and secondly a Portfolio object assigned to the user. User objects serve two purposes. Firstly to grant access to one or more InvestSuite products i.e. StoryTeller, Robo Advisor, Self Investor or the Admin Console. Secondly to assign users as owners to one or more portfolios. To create a user a limited number of fields are required. InvestSuite does not require you to store personal data (PII) on its servers. Instead we demand an identifier to reference your client. On top of that the user's e-mail address and phone number are required in case you intend to integrate our front-end experience. Create a user \u00b6 Request POST /users/ HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... { \"external_id\" : \"your-bank-user-1\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" } Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" } Get a user \u00b6 Add the InvestSuite ID to the path to retrieve a user object. Request GET /users/U01F8YW5NJXMF78PMFKXTE2R7Q7 HTTP / 1.1 Host : public-api.uat.investsuite.com Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" } Search \u00b6 You can query each entity through a general endpoint e.g. GET portfolios/?query=\u2026 . Learn more in the Handling collection responses section. Request GET /users ?query=email+eq+'jane*' HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" } Update a user object \u00b6 Given the right permissions you can update any object by issuing a PATCH request. Request PATCH /users/U01F8YW5NJXMF78PMFKXTE2R7Q7 HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... { \"language\" : \"be-NL\" } Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" } Delete a user \u00b6 Given the right permissions you can delete any object by issuing a DELETE request. Request DELETE /users/U01F8YW5NJXMF78PMFKXTE2R7Q7 HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"msg\" : \"Resource 'U01F8YW5NJXMF78PMFKXTE2R7Q7' has been deleted\" }","title":"Create and manage users"},{"location":"common_scenarios/users/#account-opening","text":"To offer access to InvestSuite products you open an account on behalf of your clients. Opening an account requires passing the data you request via an app or web site, or sending the data stored in your banking system or CRM. The data that are required are two-fold. Firstly an identifier to reference the user, and secondly a Portfolio object assigned to the user. User objects serve two purposes. Firstly to grant access to one or more InvestSuite products i.e. StoryTeller, Robo Advisor, Self Investor or the Admin Console. Secondly to assign users as owners to one or more portfolios. To create a user a limited number of fields are required. InvestSuite does not require you to store personal data (PII) on its servers. Instead we demand an identifier to reference your client. On top of that the user's e-mail address and phone number are required in case you intend to integrate our front-end experience.","title":"Account opening"},{"location":"common_scenarios/users/#create-a-user","text":"Request POST /users/ HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... { \"external_id\" : \"your-bank-user-1\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" } Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" }","title":"Create a user"},{"location":"common_scenarios/users/#get-a-user","text":"Add the InvestSuite ID to the path to retrieve a user object. Request GET /users/U01F8YW5NJXMF78PMFKXTE2R7Q7 HTTP / 1.1 Host : public-api.uat.investsuite.com Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" }","title":"Get a user"},{"location":"common_scenarios/users/#search","text":"You can query each entity through a general endpoint e.g. GET portfolios/?query=\u2026 . Learn more in the Handling collection responses section. Request GET /users ?query=email+eq+'jane*' HTTP/1.1 Host: public-api.uat.investsuite.com Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" }","title":"Search"},{"location":"common_scenarios/users/#update-a-user-object","text":"Given the right permissions you can update any object by issuing a PATCH request. Request PATCH /users/U01F8YW5NJXMF78PMFKXTE2R7Q7 HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... { \"language\" : \"be-NL\" } Response (body) { \"external_id\" : \"unique_external_entity_id\" , \"readable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"modifiable_by\" : [ \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" ], \"id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"creation_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version\" : 3 , \"version_datetime\" : \"2021-02-18T08:21:02+00:00\" , \"version_authored_by_user_id\" : \"U01ARZ3NDEKTSV4RRFFQ69G5FAV\" , \"deleted\" : false , \"_embedded\" : {}, \"first_name\" : \"Jane\" , \"last_name\" : \"Doe\" , \"email\" : \"jane.doe@example.com\" , \"phone\" : \"+123456789\" , \"brokerage_user_id\" : \"12345678\" , \"idp_user_id\" : \"user_idp_identity\" , \"language\" : \"en-US\" }","title":"Update a user object"},{"location":"common_scenarios/users/#delete-a-user","text":"Given the right permissions you can delete any object by issuing a DELETE request. Request DELETE /users/U01F8YW5NJXMF78PMFKXTE2R7Q7 HTTP / 1.1 Host : public-api.uat.investsuite.com Accept-Encoding : gzip, deflate Connection : Keep-Alive Content-Type : application/json Authorization : Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ... Response (body) { \"msg\" : \"Resource 'U01F8YW5NJXMF78PMFKXTE2R7Q7' has been deleted\" }","title":"Delete a user"}]}